class Ball {
    // fields should always be on the top

    pub x;
    pub y;
    velocityX;
    velocityY;
    

    -----static-----

    pub fn new(x, y) {
        // Ball{...} should only be used inside class
        Ball{ 
            x = x,
            y = y,
            velocityX = 0,
            velocityY = 0
        } // no semicolon = return

        // the same thing less verbose, but less clear
        // Ball{ x, y, 0, 0 } 
    }

    -----impl-----

    // this is private!
    fn BounceX(self) {
        self.velocityX = -self.velocityX;
    }

    fn BounceY(self) {
        self.velocityY = -self.velocityY;
    }

    pub fn Bounce(self) {
        self.bounceX();
        self.bounceY();
    }

    fn Rotate90(self) {
        this.velocityX, this.velocityY = -this.velocityY, this.velocityX
    }

    pub fn Rotate90N(self, times) {
        for _ : 0..times {
            this.rotate90();
        }
    }
}

// via "Ball.<smth>" you can only access static functions
let ball = Ball.new(1, 3);

// via "instance.<smth>" you can only access methods declared in impl block
ball.Bounce();

ball.Rotate90N(3);

ball.x += 10; // ok

// these are no error, but violation of language principles
ball.BounceX()

ball.velocityX += 20; 

let ball2 = Ball{1, 2, 3, 4};